#!/bin/bash -e

#
# Sysbox build container initialization script
#

thisHost=$(hostname)-$ARCH

# Build cookie (to build from scratch when necessary only)
if [[ ! -f .buildinfo ]]; then
	touch .buildinfo
	chown rootless:rootless .buildinfo
fi

make_target=$1
distro=$(grep "^ID=" /etc/os-release | cut -d "=" -f2)
version=$(grep "^VERSION_ID=" /etc/os-release | cut -d "=" -f2 | tr -d '"')
lastBuildHost=$(cat .buildinfo)
bin_dir=./build/${distro}_${version}/$ARCH

# Don't do this for FlatCar, because libseccomp is built outside the
# container, so $lastBuildHost won't be $thisHost yet we don't want to "make
# clean".
if [[ $distro != "flatcar" ]] &&
	[[ "$lastBuildHost" != "$thisHost" ]]; then
	make ARCH=$ARCH clean
	echo "$thisHost" >.buildinfo
fi

# Build sysbox
make ARCH=$ARCH $make_target --no-print-directory

# Collect build artifacts
mkdir -p ${bin_dir}
cp sysbox-runc/build/$ARCH/sysbox-runc ${bin_dir}
cp sysbox-fs/build/$ARCH/sysbox-fs ${bin_dir}
cp sysbox-mgr/build/$ARCH/sysbox-mgr ${bin_dir}

# For Kinvolk's Flatcar OS, we also build the binaries for fusermount and
# shiftfs (as they are not present in flatcar by default).
if [[ $distro == "flatcar" ]]; then
	build-fusermount "${bin_dir}"
	build-shiftfs "${bin_dir}" "${FLATCAR_KERNEL}"
fi

# Fix ownership of artifacts
chown -R ${HOST_UID}:${HOST_GID} ./build
chown -R ${HOST_UID}:${HOST_GID} ./sysbox-runc/build
chown -R ${HOST_UID}:${HOST_GID} ./sysbox-fs/build
chown -R ${HOST_UID}:${HOST_GID} ./sysbox-mgr/build
chown -R ${HOST_UID}:${HOST_GID} ./sysbox-ipc
chown -R ${HOST_UID}:${HOST_GID} ./sysbox-libs
